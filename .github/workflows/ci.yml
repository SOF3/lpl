name: CI
on:
  push:
    branches: ["**"]
    tags: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  fmt:
    name: rustfmt check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - run: cargo fmt --all -- --check
      - uses: crate-ci/typos@master
  lint-test:
    name: clippy lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - name: cargo clippy
        run: cargo clippy -- -Dclippy::all -Dclippy::pedantic
  build-bin:
    name: build binaries
    strategy:
      matrix:
        target:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          # - os: ubuntu-latest
          #   target: aarch64-unknown-linux-gnu
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          # - os: ubuntu-latest
          #   target: aarch64-unknown-linux-musl
          - os: macos-latest
            target: x86_64-apple-darwin
          # - os: macos-latest
          #   target: aarch64-apple-darwin
          - os: windows-latest
            target: i686-pc-windows-msvc
            suffix: .exe
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            suffix: .exe
          # - os: windows-latest
          #   target: aarch64-pc-windows-msvc
          #   suffix: .exe
    runs-on: ${{matrix.target.os}}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{matrix.target.target}}
      - run: cargo build --release --target ${{matrix.target.target}}
      - uses: actions/upload-artifact@v4
        with:
          path: target/${{matrix.target.target}}/release/lpl${{matrix.target.suffix}}
          name: bin-${{matrix.target.target}}
  vhs:
    name: record screencast
    runs-on: [ubuntu-latest]
    needs: [build-bin]
    steps:
      - uses: actions/checkout@v4
      - uses: FedericoCarboni/setup-ffmpeg@v2
      - run: |
          mkdir /home/runner/bin
          wget -O /home/runner/bin/ttyd https://github.com/tsl0922/ttyd/releases/download/1.7.4/ttyd.x86_64
          chmod +x /home/runner/bin/ttyd
          wget -O /home/runner/vhs.tar.gz https://github.com/charmbracelet/vhs/releases/download/v0.7.1/vhs_0.7.1_Linux_x86_64.tar.gz
          (cd /home/runner/bin && tar xzf ../vhs.tar.gz)
          echo /home/runner/bin >>$GITHUB_PATH
      - uses: actions/download-artifact@v4
        with:
          name: bin-x86_64-unknown-linux-gnu
          path: /home/runner/lpl
      - run: mv /home/runner/{lpl,bin}/lpl && chmod +x /home/runner/bin/lpl
      - run: vhs examples/sinusoidal.tape
      - uses: actions/upload-artifact@v4
        with:
          path: target/sinusoidal.gif
          name: sinusoidal
  pages:
    name: prepare GitHub pages
    runs-on: [ubuntu-latest]
    needs: [vhs, build-bin]
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: /home/runner/pages
      - run: mv {sinusoidal/,}sinusoidal.gif && rmdir sinusoidal
        working-directory: /home/runner/pages
      - uses: actions/upload-pages-artifact@v3
        with:
          path: /home/runner/pages
  deploy-pages:
    name: deploy GitHub pages
    runs-on: [ubuntu-latest]
    permissions:
      pages: write
      id-token: write
    needs: [pages]
    if: github.event_name == 'push' && (github.ref_name == 'master' || github.ref_name == 'ci-test')
    concurrency:
      group: gh-pages
    steps:
      - uses: actions/deploy-pages@v4
        id: deployment
